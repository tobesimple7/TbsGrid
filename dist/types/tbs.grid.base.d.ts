import { Options } from './tbs.grid.types';
import { TbsBase } from './base/tbs.base';
import { TbsDatabase } from './base/tbs.database';
import { TbsDataTable } from './base/tbs.data.table';
import { TbsDataArrayTable } from "./base/tbs.data.array.table";

export declare class TbsGridBase extends TbsBase {
    gridId: string;
    gridConfig: object;
    gridConfigOptions: object;
    grid_mode: string;
    mousePointRange: number;
    isMobile: boolean;
    userAgent: string;
    columns: any;
    headerColumnTable: any[];
    renderer: any;
    infoRenderer: any;
    db: TbsDatabase;
    field_table: TbsDataTable;
    header_column_table: TbsDataArrayTable;
    column_table: TbsDataTable;
    top_column_table: TbsDataTable;
    footer_column_table: TbsDataTable;
    sort_column_table: TbsDataTable;
    filter_column_table: TbsDataTable;
    group_column_table: TbsDataTable;
    source_table: TbsDataTable;
    view_table: TbsDataTable;
    group_table: TbsDataTable;
    group_header_table: TbsDataTable;
    tree_table: TbsDataTable;
    page_table: TbsDataTable;
    top_table: TbsDataTable;
    footer_table: TbsDataTable;
    temp_table: TbsDataTable;
    data_update: any[];
    data_insert: any[];
    data_delete: any[];
    info_column_table: TbsDataTable;
    panel21_table: TbsDataTable;
    panel20_table: TbsDataTable;
    panel31_table: TbsDataTable;
    cell_template_table: TbsDataTable;
    data_select_panel30: object[];
    data_select_panel31: object[];
    pageRowCount: number;
    pageIntRowCount: number;
    startRowIndex: number;
    startCellIndex: number;
    lastRowIndex: number;
    lastCellIndex: number;
    _startRowIndex: number;
    _startCellIndex: number;
    _lastRowIndex: number;
    _lastCellIndex: number;
    selectRangeArray: any[];
    startX: number;
    startY: number;
    lastX: number;
    lastY: number;
    const_filterValue: string;
    const_filterType: string;
    const_filterReset: string;
    const_filterSave: string;
    headerRowCount: number;
    options: Options;
    fixedColumnIndex: number;
    headerRowHeight: number;
    rowHeight: number;
    topRowHeight: number;
    footerRowHeight: number;
    debug_mode: boolean;
    code_horizontal: string;
    code_vertical: string;
    click: any;
    dblclick: any;
    edit: any;
    clickCheckbox: any;
    clickInfoCheckBox: any;
    clickButton: any;
    clickLink: any;
    rowBounding: any;
    clickPageFirst: any;
    clickPagePrev: any;
    clickPageIndex: any;
    clickPageNext: any;
    clickPageLast: any;
    constructor(gridId: string, gridConfigs: object);
    /**
     * get configs value
     */
    getConfigCulture(label: string): any;
    getConfigCalendar(label: string): any;
    getConfigFont(label: string): any;
    getConfigOption(label: string): any;
    getConfigLabel(label: string): any;
}
//# sourceMappingURL=tbs.grid.base.d.ts.map